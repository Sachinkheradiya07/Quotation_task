<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Quotation List</title>
    <style>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        font-family: "Arial", sans-serif;
      }

      body {
        background-color: #f5f7fa;
        padding: 20px;
        color: #333;
      }

      h1 {
        text-align: center;
        margin-bottom: 20px;
        color: #2a4365;
        font-size: 28px;
      }

      /* Button Styles */
      .button {
        background-color: #4c51bf;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin: 5px;
      }

      .button.hover:hover {
        background-color: #434190;
      }

      /* Table Styles */
      table {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
      }

      thead {
        background-color: #2a4365;
        color: white;
      }

      th,
      td {
        padding: 12px 15px;
        text-align: left;
        border-bottom: 1px solid #e2e8f0;
      }

      th {
        font-weight: bold;
        font-size: 14px;
      }

      td {
        font-size: 13px;
        color: #4a5568;
      }

      tr:nth-child(even) {
        background-color: #f9fafb;
      }

      tr:hover {
        background-color: #edf2f7;
      }

      /* Action Buttons and Dropdowns */
      .action-btn {
        position: relative;
        display: inline-block;
      }

      .doc-dropdown,
      .action-toggle {
        background-color: #4c51bf;
        color: white;
        padding: 8px 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 12px;
      }

      .doc-dropdown:hover,
      .action-toggle:hover {
        background-color: #434190;
      }

      .dropdown {
        display: none;
        position: absolute;
        background-color: #fff;
        min-width: 120px;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
        z-index: 1;
        border-radius: 5px;
        overflow: hidden;
      }

      .action-btn:hover .dropdown {
        display: block;
      }

      .dropdown button {
        color: #333;
        padding: 10px;
        text-decoration: none;
        display: block;
        background-color: #fff;
        border: none;
        width: 100%;
        text-align: left;
        cursor: pointer;
      }

      .dropdown button:hover {
        background-color: #f1f5f9;
      }

      .view-quotation,
      .view-excel,
      .download-pdf,
      .download-excel,
      .send-email,
      .edit-btn,
      .delete-btn {
        background-color: #4c51bf;
        color: white;
        padding: 8px 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin: 5px 0;
        font-size: 12px;
        width: 100%;
      }

      .view-quotation:hover,
      .view-excel:hover,
      .download-pdf:hover,
      .download-excel:hover,
      .send-email:hover,
      .edit-btn:hover {
        background-color: #434190;
      }

      .delete-btn {
        background-color: #e53e3e;
      }

      .delete-btn:hover {
        background-color: #c53030;
      }

      /* Modal Styles */
      .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
        padding-top: 60px;
      }

      .modal-content {
        background-color: #fefefe;
        margin: 5% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 600px;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      }

      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
      }

      .close:hover,
      .close:focus {
        color: #000;
        text-decoration: none;
      }

      .form-group {
        margin-bottom: 15px;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        color: #2d3748;
      }

      .form-group input,
      .form-group textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
      }

      .form-group textarea {
        resize: vertical;
        min-height: 100px;
      }

      .form-group button {
        background-color: #4caf50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
      }

      .form-group button:hover {
        background-color: #45a049;
      }

      .attachment {
        margin-top: 15px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
      }

      .attachment a {
        color: #4c51bf;
        text-decoration: none;
      }

      .attachment a:hover {
        text-decoration: underline;
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        table,
        th,
        td {
          font-size: 12px;
        }

        .button,
        .doc-dropdown,
        .action-toggle,
        .dropdown button {
          font-size: 12px;
          padding: 8px 10px;
        }

        .modal-content {
          width: 90%;
        }
      }
    </style>
  </head>
  <body>
    <div>
      <h1>Quotation List</h1>
      <button class="button hover">
        <a href="/quotation" style="text-decoration: none; color: white"
          >Create New Quotation</a
        >
      </button>
      <button class="button hover">
        <a href="/chart" style="text-decoration: none; color: white">Chart</a>
      </button>
      <br /><br />
      <table>
        <thead>
          <tr>
            <th>Quotation Id</th>
            <th>Date</th>
            <th>Consignee Name</th>
            <th>Country</th>
            <th>Port</th>
            <th>Currency</th>
            <th>Total Net Weight</th>
            <th>Total Gross Weight</th>
            <th>Total (Native)</th>
            <th>Total (INR)</th>
            <th>Documents</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% quotations.forEach(quotation => { %>
          <tr>
            <td><%= quotation.id %></td>
            <td><%= quotation.date %></td>
            <td><%= quotation.Consignee.name %></td>
            <td><%= quotation.Country.country_name %></td>
            <td><%= quotation.Port.portName %></td>
            <td><%= quotation.Currency.currency %></td>
            <td><%= quotation.totalNetWeight %></td>
            <td><%= quotation.totalGrossWeight %></td>
            <td><%= quotation.total_native %></td>
            <td><%= quotation.total_inr %></td>
            <td>
              <div class="action-btn">
                <button class="doc-dropdown">Documents ▼</button>
                <div class="dropdown">
                  <button
                    class="view-quotation"
                    onclick="viewQuotation('<%= quotation.id %>')"
                  >
                    View Quotation (PDF)
                  </button>
                  <button
                    class="view-excel"
                    onclick="viewExcel('<%= quotation.id %>')"
                  >
                    View Excel
                  </button>
                  <button
                    class="download-pdf"
                    onclick="downloadPDF('<%= quotation.id %>')"
                  >
                    Download PDF
                  </button>
                  <button
                    class="download-excel"
                    onclick="downloadExcel('<%= quotation.id %>')"
                  >
                    Download Excel
                  </button>
                  <button
                    class="send-email"
                    onclick="openEmailModal('<%= quotation.id %>')"
                  >
                    Send Email
                  </button>
                </div>
              </div>
            </td>
            <td>
              <div class="action-btn">
                <button class="action-toggle">Actions ▼</button>
                <div class="dropdown">
                  <button
                    class="edit-btn"
                    onclick="editQuotation('<%= quotation.id %>')"
                  >
                    Edit
                  </button>
                  <button
                    class="delete-btn"
                    onclick="deleteQuotation('<%= quotation.id %>')"
                  >
                    Delete
                  </button>
                </div>
              </div>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>

      <iframe id="pdf-viewer"></iframe>
    </div>

    <!-- Email Modal -->
    <div id="emailModal" class="modal">
      <div class="modal-content">
        <span class="close" onclick="closeEmailModal()">×</span>
        <h2>Send Email</h2>
        <form id="emailForm" enctype="multipart/form-data">
          <div class="form-group">
            <label for="subject">Subject</label>
            <input type="text" id="subject" name="subject" required />
          </div>
          <div class="form-group">
            <label for="receiverEmail">Receiver Email</label>
            <input
              type="email"
              id="receiverEmail"
              name="receiverEmail"
              required
            />
          </div>
          <div class="form-group">
            <label for="ccEmail">CC Email</label>
            <input type="email" id="ccEmail" name="ccEmail" />
          </div>
          <div class="form-group">
            <label for="replyToEmail">Reply To Email</label>
            <input type="email" id="replyToEmail" name="replyToEmail" />
          </div>
          <div class="form-group">
            <label for="content">Content</label>
            <textarea id="content" name="content" rows="5" required></textarea>
          </div>
          <div class="form-group attachment">
            <label>Attachment</label>
            <p id="attachmentName"></p>
            <input
              type="hidden"
              id="attachmentFileName"
              name="attachmentFileName"
            />
          </div>
          <div class="form-group">
            <label for="additionalAttachments">Additional Attachments</label>
            <input
              type="file"
              id="additionalAttachments"
              name="additionalAttachments"
              multiple
            />
          </div>
          <div class="form-group">
            <button type="submit">Send Email</button>
          </div>
        </form>
      </div>
    </div>

    <script>
      function viewQuotation(id) {
        fetch(`/quotation/${id}/pdf`)
          .then((response) => response.json())
          .then((data) => {
            if (data.pdfUrl) {
              window.open(data.pdfUrl, "_blank");
            } else {
              console.error("No PDF URL returned");
              alert("Failed to retrieve quotation PDF");
            }
          })
          .catch((error) => {
            console.error("Error fetching PDF URL:", error);
            alert("Error retrieving quotation PDF");
          });
      }

      function downloadPDF(id) {
        fetch(`/quotation/${id}/pdf`)
          .then((response) => response.json())
          .then((data) => {
            if (data.pdfUrl) {
              window.location.href = data.pdfUrl;
            } else {
              console.error("No PDF URL returned");
            }
          })
          .catch((error) => console.error("Error fetching PDF URL:", error));
      }

      function editQuotation(id) {
        window.location.href = `/quotation/${id}/edit`;
      }

      function deleteQuotation(id) {
        if (confirm("Are you sure you want to delete this quotation?")) {
          fetch(`/quotation/${id}`, {
            method: "DELETE",
          })
            .then((response) => {
              if (!response.ok) {
                throw new Error("Failed to delete quotation");
              }
              return response.json();
            })
            .then((data) => {
              console.log(data.message);
              window.location.reload();
            })
            .catch((error) => {
              console.error("Error deleting quotation:", error);
              alert("Failed to delete quotation");
            });
        }
      }

      function viewExcel(id) {
        // Redirect to a new route that renders the excel.ejs page
        window.location.href = `/quotation/${id}/excel/preview`;
      }

      function downloadExcel(id) {
        fetch(`/quotation/${id}/excel`)
          .then((response) => response.json())
          .then((data) => {
            if (data.excelUrl) {
              const link = document.createElement("a");
              link.href = data.excelUrl;
              link.download = `quotation-${id}.xlsx`;
              document.body.appendChild(link);
              link.click();
              document.body.removeChild(link);
            } else {
              console.error("No Excel URL returned");
            }
          })
          .catch((error) => console.error("Error fetching Excel URL:", error));
      }

      function openEmailModal(quotationId) {
        fetch(`/quotation/${quotationId}/pdf`)
          .then((response) => response.json())
          .then((data) => {
            if (data.pdfUrl) {
              const fileName = `quotation-${quotationId}.pdf`;
              document.getElementById(
                "attachmentName"
              ).innerHTML = `<a href="${data.pdfUrl}" target="_blank">${fileName}</a>`;
              document.getElementById("attachmentFileName").value = fileName;
            } else {
              console.error("No PDF URL returned");
              alert("Failed to retrieve quotation PDF");
            }
          })
          .catch((error) => {
            console.error("Error fetching PDF URL:", error);
            alert("Error retrieving quotation PDF");
          });

        document.getElementById("emailModal").style.display = "block";
        document.getElementById("emailForm").dataset.quotationId = quotationId;
      }

      function closeEmailModal() {
        document.getElementById("emailModal").style.display = "none";
      }

      document
        .getElementById("emailForm")
        .addEventListener("submit", function (event) {
          event.preventDefault();
          const formData = new FormData(event.target);
          const quotationId = event.target.dataset.quotationId;

          fetch(`/quotation/${quotationId}/sendemail`, {
            method: "POST",
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                alert("Email sent successfully!");
                closeEmailModal();
              } else {
                alert("Failed to send email.");
              }
            })
            .catch((error) => {
              console.error("Error sending email:", error);
              alert("Error sending email.");
            });
        });
    </script>
  </body>
</html>
